baseUrl: "https://api.nineteen.ai/v1"
name: "Multimodal Chat (Subnet 19)"
description: "Chat completion and image generation capabilities, including vision-enhanced chat and text-to-image generation."
endpoints:
  - path: /chat/completions
    externalPath: /chat/completions
    method: POST
    summary: "Chat with various AI models on Subnet 19"
    description: "Engage in conversation with AI models from Bittensor Subnet 19. Suitable for Q&A, text generation, and general chat. Supports multiple models like Llama-3.2, Qwen, etc. (see 'model' parameter enum)."
    auth:
      type: header
      key: "Authorization"
      value: "Bearer {{api-key}}"
    headers:
      Content-Type: application/json
    requestSchema:
      type: object
      properties:
        messages:
          type: array
          items:
            type: object
            properties:
              role:
                type: string
                enum: [user, assistant, system]
                default: user
              content:
                type: string
                examples: ["What is the capital of France?"]
            required: [content]
        temperature:
          type: number
          minimum: 0
          maximum: 5
          default: 0.5
          description: "Temperature for text generation"
        max_tokens:
          type: integer
          default: 500
          description: "Max tokens for text generation"
        model:
          type: string
          enum:
            [
              "unsloth/Llama-3.2-3B-Instruct",
              "Qwen/Qwen2.5-7B-Instruct",
              "casperhansen/deepseek-r1-distill-qwen-32b-awq",
              "TheBloke/Rogue-Rose-103b-v0.2-AWQ",
              "Qwen/QwQ-32B",
            ]
          default: "unsloth/Llama-3.2-3B-Instruct"
        top_p:
          type: number
          minimum: 0
          maximum: 1
          default: 0.5
          description: "Top P for text generation"
        stream:
          type: boolean
          default: false
          description: "Stream for text generation"
      required: [messages, model]

  - path: /completions
    externalPath: /completions
    method: POST
    summary: "Generate text completions using AI models from Subnet 19"
    description: "Completes a given text prompt using various AI language models available on Bittensor Subnet 19. Useful for continuing stories, finishing sentences, or generating text based on an initial input. Supports multiple models (see 'model' parameter enum)."
    auth:
      type: header
      key: "Authorization"
      value: "Bearer {{api-key}}"
    headers:
      Content-Type: application/json
    requestSchema:
      type: object
      properties:
        prompt:
          type: string
          examples: ["The most loved programming language is"]
        temperature:
          type: number
          minimum: 0
          maximum: 5
          default: 0.5
          description: "Temperature for text generation"
        max_tokens:
          type: integer
          default: 50
          description: "Max tokens for text generation"
        model:
          type: string
          enum:
            [
              "unsloth/Llama-3.2-3B-Instruct",
              "Qwen/Qwen2.5-7B-Instruct",
              "casperhansen/deepseek-r1-distill-qwen-32b-awq",
              "TheBloke/Rogue-Rose-103b-v0.2-AWQ",
              "Qwen/QwQ-32B",
            ]
          default: "unsloth/Llama-3.2-3B-Instruct"
        top_p:
          type: number
          minimum: 0
          maximum: 1
          default: 0.5
          description: "Top P for text generation"
        stream:
          type: boolean
          default: false
          description: "Stream for text generation"
      required: [prompt, model]

  - path: /text-to-image
    externalPath: /text-to-image
    method: POST
    summary: "Generate an image from a text description using Subnet 19 models"
    description: "Creates an image based on a provided text prompt using AI image generation models from Bittensor Subnet 19. Allows specifying negative prompts, steps, dimensions, and model choice (e.g., Proteus, FLUX, Dreamshaper - see 'model' enum)."
    auth:
      type: header
      key: "Authorization"
      value: "Bearer {{api-key}}"
    headers:
      Content-Type: application/json
    requestSchema:
      type: object
      properties:
        prompt:
          type: string
          description: "Prompt for image generation"
          examples: ["A fluffy cat"]
        negative_prompt:
          type: string
          description: "Negative prompt for image generation"
          default: ""
        steps:
          type: integer
          exclusiveMinimum: 4
          exclusiveMaximum: 50
          default: 8
          description: "Number of inference steps, higher for more quality but increased generation time"
        cfg_scale:
          type: number
          exclusiveMinimum: 1
          exclusiveMaximum: 12
          default: 3
          description: "Guidance scale"
        width:
          type: integer
          minimum: 512
          exclusiveMaximum: 2048
          default: 1024
          description: "Width for image generation"
        height:
          type: integer
          minimum: 512
          exclusiveMaximum: 2048
          default: 1024
          description: "Height for image generation"
        model:
          type: string
          enum:
            [
              "dataautogpt3/ProteusV0.4-Lightning",
              "black-forest-labs/FLUX.1-schnell",
              "Lykon/dreamshaper-xl-lightning",
            ]
          default: "dataautogpt3/ProteusV0.4-Lightning"
      required: [prompt, model]

  - path: /image-to-image
    externalPath: /image-to-image
    method: POST
    summary: "Modify an existing image based on a text prompt using Subnet 19"
    description: "Takes an initial image (via URL) and modifies it based on a text prompt using AI models from Bittensor Subnet 19. Control the strength of the modification with 'image_strength'. Supports various models (see 'model' enum)."
    auth:
      type: header
      key: "Authorization"
      value: "Bearer {{api-key}}"
    headers:
      Content-Type: application/json
    requestSchema:
      type: object
      properties:
        init_image:
          type: string
          description: "URL for image"
          examples:
            [
              "https://lastfm.freetls.fastly.net/i/u/770x0/443c5e1c35fd38bb5a49a7d00612dab3.jpg#443c5e1c35fd38bb5a49a7d00612dab3",
            ]
        prompt:
          type: string
          examples: ["Make his hat blue"]
        negative_prompt:
          type: string
          description: "Negative prompt for image generation"
          default: ""
        steps:
          type: integer
          exclusiveMinimum: 4
          exclusiveMaximum: 50
          default: 10
          description: "Number of inference steps, higher for more quality but increased generation time"
        cfg_scale:
          type: number
          exclusiveMinimum: 1
          exclusiveMaximum: 12
          default: 3
          description: "Guidance scale"
        width:
          type: integer
          minimum: 512
          exclusiveMaximum: 2048
          default: 1024
          description: "Width for image generation"
        height:
          type: integer
          minimum: 512
          exclusiveMaximum: 2048
          default: 1024
          description: "Height for image generation"
        model:
          type: string
          enum:
            [
              "dataautogpt3/ProteusV0.4-Lightning",
              "black-forest-labs/FLUX.1-schnell",
              "Lykon/dreamshaper-xl-lightning",
            ]
          default: "dataautogpt3/ProteusV0.4-Lightning"
        image_strength:
          type: number
          exclusiveMinimum: 0.01
          exclusiveMaximum: 1
          default: 0.5
          description: "Image strength of the generated image with respect to the original image"
      required: [init_image, prompt, model]

  - path: /avatar
    externalPath: /avatar
    method: POST
    summary: "Generate a stylized avatar from an initial image using Subnet 19"
    description: "Creates an avatar image based on an initial input image and a text prompt, using specialized AI models from Bittensor Subnet 19. Allows control over style strength using 'ipadapter_strength' and 'control_strength'."
    auth:
      type: header
      key: "Authorization"
      value: "Bearer {{api-key}}"
    headers:
      Content-Type: application/json
    requestSchema:
      type: object
      properties:
        prompt:
          type: string
          description: "Prompt for avatar generation"
          examples: ["Make his hat blue"]
        negative_prompt:
          type: string
          description: "Negative prompt for avatar generation"
          default: ""
        steps:
          type: integer
          exclusiveMinimum: 4
          exclusiveMaximum: 50
          default: 10
          description: "Steps for avatar generation"
        cfg_scale:
          type: number
          default: 3
          description: "CFG scale for avatar generation"
        width:
          type: integer
          minimum: 512
          exclusiveMaximum: 2048
          default: 1024
          description: "Width for avatar generation"
        height:
          type: integer
          minimum: 512
          exclusiveMaximum: 2048
          default: 1024
          description: "Height for avatar generation"
        ipadapter_strength:
          type: number
          exclusiveMinimum: 0.1
          maximum: 1
          default: 0.5
          description: "Image Adapter Strength for avatar generation"
        control_strength:
          type: number
          exclusiveMinimum: 0.1
          maximum: 1
          default: 0.5
          description: "Control Strength for avatar generation"
        init_image:
          type: string
          description: "URL for image"
          examples:
            [
              "https://lastfm.freetls.fastly.net/i/u/770x0/443c5e1c35fd38bb5a49a7d00612dab3.jpg#443c5e1c35fd38bb5a49a7d00612dab3",
            ]
      required: [prompt, init_image]
