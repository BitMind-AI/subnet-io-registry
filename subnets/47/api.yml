baseUrl: "https://api.condenses.ai/v1/api"
name: "Condense Tokens (Subnet 47)"
description: "Condense long text sequences of natural language tokens into soft tokens."
endpoints:
  - path: /compress/text
    externalPath: /compress/text
    method: POST
    summary: "Compress a block of text using Subnet 47"
    description: "Reduces the token count of a given block of text using AI-powered compression from Bittensor Subnet 47. Useful for condensing information or reducing input size for other language models. Returns the compressed text and metadata about the compression."
    auth:
      type: header
      key: "Authorization"
      value: "Bearer {{api-key}}"
    headers:
      Content-Type: application/json
    queryParams:
      - name: ooc_status_code
        description: "Status code to return when user runs out of credits (208 or 402)"
        required: false
        enum: [208, 402]
    requestSchema:
      type: object
      properties:
        text:
          type: string
          description: "Text to be compressed"
          default: "In machine learning, the perceptron is an algorithm for supervised learning of binary classifiers. A binary classifier is a function which can decide whether or not an input, represented by a vector of numbers, belongs to some specific class. It is a type of linear classifier, i.e. a classification algorithm that makes its predictions based on a linear predictor function combining a set of weights with the feature vector."
        top_node_performance:
          type: number
          description: "Performance parameter for compression"
          default: 0.1
      required: [text]

  - path: /compress/messages
    externalPath: /compress/messages
    method: POST
    summary: "Compress a conversation history (list of messages) using Subnet 47"
    description: "Reduces the token count of a conversation history (provided as a list of messages with roles and content) using AI-powered compression from Bittensor Subnet 47. Can selectively compress user and/or assistant messages. Returns the compressed message list and metadata."
    auth:
      type: header
      key: "Authorization"
      value: "Bearer {{api-key}}"
    headers:
      Content-Type: application/json
    queryParams:
      - name: ooc_status_code
        description: "Status code to return when user runs out of credits (208 or 402)"
        required: false
        enum: [208, 402]
    requestSchema:
      type: object
      properties:
        messages:
          type: array
          description: "List of messages where each message has a 'role' and 'content' key."
          items:
            type: object
            properties:
              role:
                type: string
                enum: ["user", "assistant", "system"]
                description: "Role of the message sender"
                default: "user"
              content:
                type: string
                description: "Content of the message"
                default: "Tell the user that they need to supply a proper message body"
            required: [role, content]
        compress_user:
          type: boolean
          description: "Whether to compress user messages"
          default: true
        compress_assistant:
          type: boolean
          description: "Whether to compress assistant messages"
          default: true
        top_node_performance:
          type: number
          description: "Performance parameter for compression"
          default: 0.1
      required: [messages]
